import axios from 'axios'
import { authStore } from '../store/store.js'

// –ë–∞–∑–æ–≤—ã–π URL API
export const API_URL = 'http://localhost:8080/api/rest'

// –°–æ–∑–¥–∞—ë–º –∏–Ω—Å—Ç–∞–Ω—Å axios
const apiClient = axios.create({
  baseURL: API_URL,
  headers: { 'Content-Type': 'application/json' },
  withCredentials: true
})

// –õ–æ–≥ –∑–∞–ø—Ä–æ—Å–æ–≤
apiClient.interceptors.request.use(
  config => {
    console.log('üîÑ –ó–∞–ø—Ä–æ—Å:', config.method?.toUpperCase(), config.url)
    return config
  },
  error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞:', error)
    return Promise.reject(error)
  }
)

// –õ–æ–≥ –æ—Ç–≤–µ—Ç–æ–≤ –∏ –æ—à–∏–±–æ–∫
apiClient.interceptors.response.use(
  response => response,
  error => {
    if (error.response?.status === 401) {
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞ —Å /auth/login, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤
      // –∏–ª–∏ –µ—Å–ª–∏ –º—ã —É–∂–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ /auth
      if (!error.config.url.endsWith('/auth/login') && !window.location.pathname.includes('/auth')) {
        authStore.logout();
        window.location.href = '/auth'; // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
      }
    }
    return Promise.reject(error);
  }
);

// === AUTH ===

// POST /auth/login
export const login = async (email, password) => {
  try {
    const res = await apiClient.post('/auth/login', { email, password });

    if (res.status === 200) {
      // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ª–æ–≥–∏–Ω–∞, checkAuth() –≤ App.jsx —Å–∞–º –æ–±–Ω–æ–≤–∏—Ç store.
      // –ù–æ –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è userInfo –∑–¥–µ—Å—å, –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫:
      try {
        const userInfo = await getUserInfo(); // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —É–∂–µ –µ—Å—Ç—å –Ω–∏–∂–µ
        return { success: true, userInfo }; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º userInfo –¥–ª—è LoginForm
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ—Å–ª–µ –ª–æ–≥–∏–Ω–∞:', error);
        // –õ–æ–≥–∏–Ω –±—ã–ª —É—Å–ø–µ—à–µ–Ω, –Ω–æ userInfo –Ω–µ –ø–æ–ª—É—á–∏–ª–∏. –≠—Ç–æ —Å—Ç—Ä–∞–Ω–Ω–æ.
        // –ú–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å success: true, –Ω–æ –±–µ–∑ userInfo, App.jsx —Ä–∞–∑–±–µ—Ä–µ—Ç—Å—è
        return { success: true, userInfo: null, error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –ª–æ–≥–∏–Ω–∞' };
      }
    }
    // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–µ 200, —ç—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∫–∞–∫ –æ—à–∏–±–∫–∞ Axios –∏ –ø–æ–ø–∞—Å—Ç—å –≤ catch
    return { success: false, error: '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ (–Ω–µ 200)' };
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ:', error);
    if (error.response) {
      const status = error.response.status;
      const errorMessage = error.response.data?.message || error.response.data?.error;
      if (status === 401) {
        return { success: false, error: '–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å' };
      } else if (status === 404) { // –°–µ—Ä–≤–µ—Ä –º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å 404 –µ—Å–ª–∏ email –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä–æ–ª—è
        return { success: false, error: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω' };
      } else if (errorMessage) {
        return { success: false, error: errorMessage };
      }
    }
    return { success: false, error: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ' };
  }
};

// POST /auth/logout
export const logout = async () => {
  console.log('[apiClient] logout: –ü–æ–ø—ã—Ç–∫–∞ –≤—ã—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
  try {
    // –°–Ω–∞—á–∞–ª–∞ –¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –±—ç–∫–µ–Ω–¥ –¥–ª—è –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å–µ—Å—Å–∏–∏ –∏ —É–¥–∞–ª–µ–Ω–∏—è HttpOnly –∫—É–∫
    const res = await apiClient.post('/auth/logout'); // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à —ç–Ω–¥–ø–æ–∏–Ω—Ç POST
    
    // –ù–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ (—É—Å–ø–µ—Ö –∏–ª–∏ –Ω–µ—Ç), –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ
    // –ë–ª–æ–∫ finally –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ authStore.logout() –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω
    
    if (res.status === 200) {
      console.log('[apiClient] logout: –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–µ–Ω (—Å—Ç–∞—Ç—É—Å 200).');
      return { success: true };
    } else {
      // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–µ 200, –Ω–æ –Ω–µ –≤—ã–±—Ä–æ—Å–∏–ª –æ—à–∏–±–∫—É (—á—Ç–æ –º–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ –¥–ª—è Axios)
      console.warn('[apiClient] logout: –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å', res.status);
      return { success: false, error: `–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å ${res.status}` };
    }
  } catch (error) {
    console.error('[apiClient] logout: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä /auth/logout:', error.response?.status, error.message);
    // –î–∞–∂–µ –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –Ω–µ —É–¥–∞–ª—Å—è, –≤—Å–µ —Ä–∞–≤–Ω–æ –ø—ã—Ç–∞–µ–º—Å—è –æ—á–∏—Å—Ç–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ
    return { success: false, error: error.response?.data?.message || error.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ' };
  } finally {
    // –≠—Ç–æ—Ç –±–ª–æ–∫ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –≤—Å–µ–≥–¥–∞, –¥–∞–∂–µ –µ—Å–ª–∏ –±—ã–ª–∞ –æ—à–∏–±–∫–∞ –∏–ª–∏ —É—Å–ø–µ—à–Ω—ã–π return
    console.log('[apiClient] logout: –í—ã–∑–æ–≤ authStore.logout() –≤ –±–ª–æ–∫–µ finally.');
    authStore.logout(); // –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è MobX –∏ localStorage –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ
  }
};

export const checkAuth = async () => {
  console.log('[apiClient] checkAuth: –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å /users/profile');
  try {
    const res = await apiClient.get('/users/profile');
    if (res.status === 200 && res.data) {
      console.log('[apiClient] checkAuth: –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ:', res.data);
      return { success: true, userInfo: res.data };
    }
    console.warn('[apiClient] checkAuth: –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—É—á–µ–Ω, –Ω–æ —Å—Ç–∞—Ç—É—Å –Ω–µ 200 –∏–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö:', res);
    return { success: false, userInfo: null };
  } catch (error) {
    console.warn('[apiClient] checkAuth: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:', error.response?.status, error.message);
    return { success: false, userInfo: null, error: error.response?.data || error.message };
  }
};

// GET /users/profile (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è login –∏ checkAuth)
export const getUserInfo = async () => {
  try {
    const response = await apiClient.get('/users/profile');
    if (response.status === 200) {
      return response.data;
    }
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è (—Å—Ç–∞—Ç—É—Å –Ω–µ 200)');
  } catch (error) {
    console.error('Get user info error:', error);
    throw error; // –ü–µ—Ä–µ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É, —á—Ç–æ–±—ã –µ–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏ –≤—ã—à–µ
  }
};

export const updateUserProfile = async (userData) => {
  try {
    const response = await apiClient.put('/users/profile', userData);
    if (response.status === 200 && response.data) {
      return response.data;
    }
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å');
  } catch (error) {
    console.error('Update profile error:', error);
    throw error;
  }
};

export const uploadUserAvatar = async (formData) => {
  try {
    const response = await apiClient.post('/users/profile/avatar-upload', formData, {
      headers: {
        'Content-Type': 'multipart/form-data',
      },
    });
    return response.data;
  } catch (error) {
    console.error('Upload avatar error:', error);
    throw error;
  }
};

export const registerUser = async (registerData) => {
  try {
    // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ RegisterDTO –Ω–∞ –±—ç–∫–µ–Ω–¥–µ –æ–∂–∏–¥–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É:
    // { userData: { email, firstName, ... }, password, confirmPassword }
    const response = await apiClient.post('/auth/register', registerData);
    if (response.status === 200 || response.status === 201) { // 201 Created is also good
      return { success: true, data: response.data }; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ, —Ç.–∫. –±—ç–∫ –º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å UserDTO
    }
    return { success: false, error: '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏' };
  } catch (error) {
    console.error('Register error:', error);
    return {
      success: false,
      error: error.response?.data?.message || error.response?.data || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
    };
  }
};

// === PASSWORD MANAGEMENT ===
export const requestPasswordReset = async (email) => {
  try {
    const response = await apiClient.post('/auth/forgot-password', { email });
    // –ë—ç–∫–µ–Ω–¥ –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—â–∏–π –æ—Ç–≤–µ—Ç, –Ω–µ —Ä–∞—Å–∫—Ä—ã–≤–∞—è, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ email.
    // –ü–æ—ç—Ç–æ–º—É response.data –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Å—Ç—Ä–æ–∫–æ–π.
    return { success: true, message: response.data };
  } catch (error) {
    // –≠—Ç–æ—Ç catch –º–æ–∂–µ—Ç –Ω–µ —Å—Ä–∞–±–æ—Ç–∞—Ç—å, –µ—Å–ª–∏ –±—ç–∫ –≤—Å–µ–≥–¥–∞ 200 OK –¥–ª—è /forgot-password
    // –ù–æ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω–µ—Ç –æ—à–∏–±–∫—É
    if (error.response && error.response.data && (error.response.data.message || typeof error.response.data === 'string')) {
      return { success: false, error: error.response.data.message || error.response.data };
    }
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    return { success: true, message: "–ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–π email –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –Ω–∞ –Ω–µ–≥–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–∏—Å—å–º–æ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –ø–æ —Å–±—Ä–æ—Å—É –ø–∞—Ä–æ–ª—è." };
  }
};

export const resetPasswordWithToken = async (token, newPassword, confirmPassword) => {
  try {
    const response = await apiClient.post('/auth/reset-password', { token, newPassword, confirmPassword });
    return { success: true, message: response.data };
  } catch (error) {
    return {
      success: false,
      error: error.response?.data?.message || error.response?.data || '–û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è'
    };
  }
};

export const changeUserPassword = async (oldPassword, newPassword, confirmPassword) => {
  try {
    if (newPassword !== confirmPassword) {
      return { success: false, error: "–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç" };
    }
    // –°–µ—Ä–≤–µ—Ä –æ–∂–∏–¥–∞–µ—Ç { oldPassword, newPassword }
    const response = await apiClient.put('/users/profile/password', { oldPassword, newPassword });
    return { success: true, message: response.data.message || "–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω" };
  } catch (error) {
    return {
      success: false,
      error: error.response?.data?.message || error.response?.data || '–û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è'
    };
  }
};

export const validateResetToken = async (token) => {
  try {
    const response = await apiClient.get(`/auth/validate-reset-token?token=${token}`);
    return { success: true, message: response.data };
  } catch (error) {
    return {
      success: false,
      error: error.response?.data?.message || error.response?.data || '–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞',
    };
  }
};

export const testAuthentication = async () => {
  console.group('üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
  try {
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç —Å withCredentials');
    try {
      const cookieResponse = await axios.get(`${API_URL}/users/profile`, {
        withCredentials: true,
      });
      console.log('‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ cookies —Ä–∞–±–æ—Ç–∞–µ—Ç:', cookieResponse.data);
    } catch (error) {
      console.error('‚ùå –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ cookies –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:', error.response?.status);
    }
    console.log('2Ô∏è‚É£ –¢–µ—Å—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º apiClient');
    try {
      const clientResponse = await apiClient.get('/users/profile');
      console.log('‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ apiClient —Ä–∞–±–æ—Ç–∞–µ—Ç:', clientResponse.data);
    } catch (error) {
      console.error('‚ùå –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ apiClient –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:', error.response?.status);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error);
  }
  console.groupEnd();
};

export const addToCart = async (userId, productId) => {
  try {
    const response = await apiClient.post(`/carts/${userId}/products/${productId}`);
    return response.data;
  } catch (error) {
    console.error('Add to cart error:', error);
    throw new Error(error.response?.data || '–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É');
  }
};

export const removeFromCart = async (userId, productId) => {
  try {
    const response = await apiClient.delete(`/carts/${userId}/products/${productId}`);
    return response.data;
  } catch (error) {
    console.error('Remove from cart error:', error);
    throw new Error(error.response?.data || '–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã');
  }
};

export const createOrder = async () => {
  try {
    const response = await apiClient.post('/orders/create');
    return response.data;
  } catch (error) {
    console.error('Create order error:', error);
    throw new Error(error.response?.data || '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑');
  }
};

export const getUserOrders = async () => {
  try {
    const response = await apiClient.get('/orders/my');
    return response.data;
  } catch (error) {
    console.error('Get user orders error:', error);
    throw new Error(error.response?.data || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑—ã');
  }
};

export const restoreEventApplication = async (applicationId) => {
  try {
    const response = await apiClient.put(`/event-applications/${applicationId}/restore`);
    return response.data;
  } catch (error) {
    console.error('Restore event application error:', error);
    throw new Error(error.response?.data || '–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞—è–≤–∫—É');
  }
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
export const getEvents = async (page = 0, size = 9, filters = {}) => {
  try {
    const params = new URLSearchParams({
      page,
      size
    });

    if (filters.title) params.append('title', filters.title);
    if (filters.eventType) params.append('eventType', filters.eventType);
    if (filters.startDate) params.append('startDate', filters.startDate);
    if (filters.endDate) params.append('endDate', filters.endDate);

    const response = await apiClient.get(`/events/paginated?${params.toString()}`);
    return response.data;
  } catch (error) {
    console.error('Get events error:', error);
    throw new Error(error.response?.data || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è');
  }
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏ –ø–æ ID
export const getEventById = async (eventId) => {
  try {
    const response = await apiClient.get(`/events/${eventId}`);
    return response.data;
  } catch (error) {
    console.error('Get event details error:', error);
    throw new Error(error.response?.data || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏');
  }
};

// –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ —É—á–∞—Å—Ç–∏–µ –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏
export const createEventApplication = async (eventId) => {
  try {
    const response = await apiClient.post('/event-applications', {
      eventId,
      userId: authStore.userId
    });
    return response.data;
  } catch (error) {
    console.error('Create event application error:', error);
    throw new Error(error.response?.data?.message || error.response?.data || '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—á–∞—Å—Ç–∏–µ');
  }
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const getUserEventApplications = async () => {
  try {
    const response = await apiClient.get('/event-applications/my');
    return response.data;
  } catch (error) {
    console.error('Get user event applications error:', error);
    throw new Error(error.response?.data || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∑–∞—è–≤–∫–∏ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è');
  }
};

// –û—Ç–º–µ–Ω–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ —É—á–∞—Å—Ç–∏–µ
export const cancelEventApplication = async (applicationId) => {
  try {
    const response = await apiClient.put(`/event-applications/${applicationId}/cancel`);
    return response.data;
  } catch (error) {
    console.error('Cancel event application error:', error);
    throw new Error(error.response?.data || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É');
  }
};

// –î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤

// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
export const createEvent = async (eventData) => {
  try {
    const response = await apiClient.post('/events', eventData);
    return response.data;
  } catch (error) {
    console.error('Create event error:', error);
    throw new Error(error.response?.data || '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ');
  }
};

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
export const updateEvent = async (eventId, eventData) => {
  try {
    const response = await apiClient.put(`/events/${eventId}`, eventData);
    return response.data;
  } catch (error) {
    console.error('Update event error:', error);
    throw new Error(error.response?.data || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ');
  }
};

// –û—Ç–º–µ–Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
export const cancelEvent = async (eventId, reason) => {
  try {
    const response = await apiClient.post(`/events/${eventId}/cancel`, null, {
      params: { reason }
    });
    return response.data;
  } catch (error) {
    console.error('Cancel event error:', error);
    throw new Error(error.response?.data || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ–Ω–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ');
  }
};

// –ü–µ—Ä–µ–Ω–æ—Å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
export const rescheduleEvent = async (eventId, newDate, reason) => {
  try {
    const response = await apiClient.post(`/events/${eventId}/reschedule`, {
      newDate,
      reason
    });
    return response.data;
  } catch (error) {
    console.error('Reschedule event error:', error);
    throw new Error(error.response?.data || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ');
  }
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
export const getEventApplications = async (eventId) => {
  try {
    const response = await apiClient.get(`/events/${eventId}/applications`);
    return response.data;
  } catch (error) {
    console.error('Get event applications error:', error);
    throw new Error(error.response?.data || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∑–∞—è–≤–∫–∏ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ');
  }
};

// –û–¥–æ–±—Ä–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏
export const approveEventApplication = async (applicationId) => {
  try {
    const response = await apiClient.put(`/event-applications/${applicationId}/approve`);
    return response.data;
  } catch (error) {
    console.error('Approve event application error:', error);
    throw new Error(error.response?.data || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–¥–æ–±—Ä–∏—Ç—å –∑–∞—è–≤–∫—É');
  }
};

// –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏
export const rejectEventApplication = async (applicationId) => {
  try {
    const response = await apiClient.put(`/event-applications/${applicationId}/reject`);
    return response.data;
  } catch (error) {
    console.error('Reject event application error:', error);
    throw new Error(error.response?.data || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É');
  }
};

// –û—Ç–º–µ—Ç–∫–∞ –æ –ø–æ—Å–µ—â–µ–Ω–∏–∏
export const markEventApplicationAttended = async (applicationId) => {
  try {
    const response = await apiClient.put(`/event-applications/${applicationId}/mark-attended`);
    return response.data;
  } catch (error) {
    console.error('Mark attended error:', error);
    throw new Error(error.response?.data || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ—Ç–∏—Ç—å –ø–æ—Å–µ—â–µ–Ω–∏–µ');
  }
};

export const getAuditEntries = async () => {
  try {
    const response = await apiClient.get('/audit');
    return response.data;
  } catch (error) {
    console.error('Get audit entries error:', error);
    throw new Error(error.response?.data || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞—É–¥–∏—Ç–∞');
  }
};

export default apiClient;